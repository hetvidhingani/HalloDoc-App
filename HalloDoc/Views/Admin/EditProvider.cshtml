@model HalloDoc.Entities.ViewModels.ProviderViewModel
@{
    ViewBag.providers = "active";
    ViewData["Title"] = "Edit Provider";

}
<div class="mainSectionMargin ">
    <div class="d-flex flex-column align-items-center justify-content-center ">

        <div class="PatientInfo d-flex justify-content-between align-items-center mb-2">
            <h3>Physician Account</h3>
            <a href="##" onClick="history.go(-1); return false;" style=" right: 0px; text-decoration: none; ">
                <button class="back">
                    <i class="bi bi-chevron-left"></i>
                    back
                </button>
            </a>
        </div>
        <div class="p-4  mb-3 rounded formshadow h-100 PatientInfo">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <input data-valmsg-replace="true" type="hidden" asp-for="PhysicianId" />

            <h3>Account Information</h3>

            <div class="row formrow ">
                <div class="col-lg-6 col-md-6 col-sm-12">
                    <div class="form-floating form-group">
                        <input data-valmsg-replace="true" asp-for="UserName" type="text" class="form-control " placeholder=" " readonly>
                        <label for=" ">UserName</label>
                        <span asp-validation-for="UserName" class="text-danger"></span>

                    </div>
                </div>
                <div class="col-lg-6 col-md-6 col-sm-12">
                    <div class="form-floating form-group">
                        <input asp-for="Password" type="text" class="form-control " id="Password" placeholder=" ">
                        <label for=" ">Password</label>
                        <span asp-validation-for="Password" class="text-danger passwordvalidate"></span>
                    </div>
                </div>
            </div>
            @* //form 1 *@
            <form id="form1" asp-action="changeRoleStatus" asp-controller="Admin" asp-route-id="@Model.PhysicianId" method="post" data-form-id="1">
                <div class="row formrow ">
                    <input data-valmsg-replace="true" type="hidden" asp-for="PhysicianId" />

                    <div class="col-lg-6 col-md-6 col-sm-12">
                        <div class="form-floating form-group">

                            <select class="form-select form-select-sm  edit" style="height:55px;" aria-label="Default select example" id="statusID" aria-height="5vh" asp-for="statusId" disabled>
                                <option value="0"  disabled>Status</option>

                                @foreach (var status in Model.status)
                                {
                                    <option value="@status.Statusid">@status.Statusname</option>
                                }
                            </select>
                            <label for="">Status</label>
                            <span asp-validation-for="statusId" class="text-danger status"></span>
                        </div>
                    </div>


                    <div class="col-lg-6 col-md-6 col-sm-12">
                        <div class="form-floating form-group">
                            <select class="form-select form-select-sm  edit" style="height:55px;" aria-label="Default select example" id="roleID" aria-height="5vh" asp-for="RoleId" disabled>
                                <option value="0" selected disabled>Role</option>

                                @foreach (var role in Model.Role)
                                {
                                    <option value="@role.RoleId">@role.Name</option>
                                }
                            </select>
                            <label for="">Role</label>
                            <span asp-validation-for="RoleId" class="text-danger role"></span>
                        </div>
                    </div>
                </div>
                <div class="d-flex justify-content-end">

                    <button class="btn btn-info edit-button" id="edit-button4" type="button">Edit</button>
                    <button class="btn btn-info savebtn SaveBillingInfo" id="save-button1" style="display:none;" type="submit" disabled>Save</button>
                    <button class="btn btn-danger cancelbtn SaveBillingInfo" id="cancel-button1" style="display:none;" type="reset" disabled>Cancel</button>
                    <button class="btn btn-outline-info  mx-1" id="resetpasswordBtnProvider">Reset Password</button>
                </div>

            </form>

            <form id="form2" asp-action="savePhysicianInformation" asp-controller="Admin" asp-route-id="@Model.PhysicianId" method="post">
                <h3> Physician Information</h3>
                <input data-valmsg-replace="true" type="hidden" asp-for="PhysicianId" id="PhysicianId" />
                <div class="row formrow ">
                    <div class="col-lg-6 col-md-6 col-sm-12">
                        <div class="form-floating form-group">
                            <input data-valmsg-replace="true" asp-for="FirstName" type="text" id="firstName" name="FirstName" class="form-control edit" placeholder=" " readonly>
                            <label for=" ">First Name</label>
                            <span asp-validation-for="FirstName" class="text-danger checkhere"></span>

                        </div>
                    </div>
                    <div class="col-lg-6 col-md-6 col-sm-12">
                        <div class="form-floating form-group">
                            <input data-valmsg-replace="true" asp-for="LastName" id="lastname" type="text" class="form-control edit" placeholder=" " readonly>
                            <label for=" ">Last Name</label>
                            <span asp-validation-for="LastName" class="text-danger lastname"></span>

                        </div>
                    </div>
                    <div class="col-lg-6 col-md-6 col-sm-12">
                        <div class="form-floating form-group">
                            <input data-valmsg-replace="true" asp-for="Email"
                                   id="Email" type="email" autocomplete="off"
                                   class="form-control edit" placeholder=" " readonly>
                            <label for=" ">Email</label>
                            <span asp-validation-for="Email" class="text-danger email"></span>

                        </div>
                    </div>

                    <div class="col-lg-6 col-md-6 col-sm-12 ">
                        <div class="form-floating form-group  border">
                            <input data-valmsg-replace="true" asp-for="PhoneNumber" id="phone" type="tel" style="border: none;height: 54px;" class="edit" readonly />

                            <span asp-validation-for="PhoneNumber" class="text-danger phone"></span>
                        </div>
                    </div>
                    <div class="col-lg-6 col-md-6 col-sm-12 ">
                        <div class="form-floating form-group">
                            <input data-valmsg-replace="true" asp-for="MedicalLicense"
                                   type="text" autocomplete="off"
                                   class="form-control edit" placeholder=" " readonly>
                            <label for=" ">MedicalLicense</label>
                            <span asp-validation-for="MedicalLicense" class="text-danger"></span>

                        </div>
                    </div>
                    <div class="col-lg-6 col-md-6 col-sm-12 ">
                        <div class="form-floating form-group">
                            <input data-valmsg-replace="true" asp-for="NPINumber"
                                   onblur="AlertName()" type="number" autocomplete="off"
                                   class="form-control edit" placeholder=" " readonly>
                            <label for=" ">NPInumber</label>
                            <span asp-validation-for="NPINumber" class="text-danger"></span>

                        </div>
                    </div>
                    <div class="col-lg-6 col-md-6 col-sm-12 ">
                        <div class="form-floating form-group">
                            <input data-valmsg-replace="true" asp-for="SyncEmail"
                                   id="suncEmail" type="email" autocomplete="off"
                                   class="form-control edit" placeholder=" " readonly>
                            <label for=" ">Syncronization Email Address</label>
                            <span asp-validation-for="SyncEmail" class="text-danger"></span>

                        </div>
                    </div>
                    <div class="col-lg-6 col-md-6 col-sm-12 d-flex align-items-center">
                        @foreach (var cb in Model.StateCheckbox)
                        {

                            <div class="form-check mx-2">
                                <input class="form-check-input edit" type="checkbox" id="notification-@cb.RegionId" name="notification" value="@cb.RegionId" @(cb.IsChecked ? "checked" : "") disabled>
                                <label class="form-check-label" for="notification-@cb.RegionId">

                                    @cb.Name
                                </label>
                            </div>
                        }

                    </div>

                </div>

                <div class="d-flex justify-content-end">
                    <button class="btn btn-info edit-button" id="edit-button3" type="button">Edit</button>
                    <button class="btn btn-info savebtn SaveBillingInfo" style="display:none;" id="save-button2" type="submit" disabled>Save</button>
                    <button class="btn btn-danger cancelbtn SaveBillingInfo" id="cancel-button2" style="display:none;" type="reset" disabled>Cancel</button>
                </div>

            </form>

            <form asp-action="saveBillingInformation" asp-controller="Admin" asp-route-id="@Model.PhysicianId" id="form3" method="post">
                <h3> Mailing & Billing Information</h3>
                <input data-valmsg-replace="true" type="hidden" asp-for="PhysicianId" id="PhysicianId" />

                <div class="row formrow">
                    <div class="col-lg-6 col-md-6 col-sm-12">
                        <div class="form-floating form-group">
                            <input data-valmsg-replace="true" asp-for="Address1" type="text" class="form-control edit" id="address1" placeholder=" " readonly>
                            <label for=" ">Address1</label>
                            <span asp-validation-for="Address1" class="text-danger address1"></span>

                        </div>
                    </div>
                    <div class="col-lg-6 col-md-6 col-sm-12">
                        <div class="form-floating form-group">
                            <input data-valmsg-replace="true" asp-for="Address2" type="text" id="address2" class="form-control edit" placeholder=" " readonly>
                            <label for=" ">Address2 </label>
                            <span asp-validation-for="Address2" class="text-danger address2"></span>

                        </div>
                    </div>
                    <div class="col-lg-6 col-md-6 col-sm-12">
                        <div class="form-floating form-group">
                            <input data-valmsg-replace="true" asp-for="City" id="city" type="text" class="form-control edit" placeholder=" " readonly>
                            <label for=" ">City </label>
                            <span asp-validation-for="City" class="text-danger city"></span>

                        </div>
                    </div>
                    <div class="col-lg-6 col-md-6 col-sm-12 dropdownState">
                        <div class="form-floating form-group">
                            <select class="form-select form-select-sm edit" style="height:60px;" aria-label="Default select example" aria-height="5vh" asp-for="RegionId" disabled>
                                <option value="0" selected disabled>State</option>

                                @foreach (var region in Model.Regions)
                                {
                                    <option value="@region.RegionId">@region.Name</option>
                                }
                            </select>
                            <label for="">State</label>
                            <span asp-validation-for="RegionId" class="text-danger state"></span>
                        </div>
                    </div>

                    <div class="col-lg-6 col-md-6 col-sm-12">
                        <div class="form-floating form-group">
                            <input data-valmsg-replace="true" asp-for="Zip" type="text" id="zip" class="form-control edit" placeholder=" " readonly>
                            <label for=" ">Zip code</label>
                            <span asp-validation-for="Zip" class="text-danger zip"></span>

                        </div>
                    </div>
                    <div class="col-lg-6 col-md-6 col-sm-12 ">
                        <div class="form-floating form-group  border">
                            <input data-valmsg-replace="true" asp-for="BillingPhoneNumber" id="phone2" type="tel" style="border: none;height: 54px;" class="edit" readonly />

                        </div>
                        <span asp-validation-for="BillingPhoneNumber" class="text-danger"></span>
                    </div>


                </div>
                <div class="d-flex justify-content-end">
                    <button class="btn btn-info edit-button" id="edit-button2" type="button">Edit</button>
                    <button class="btn btn-info savebtn SaveBillingInfo" style="display:none;" id="save-button3" type="submit" disabled>Save</button>
                    <button class="btn btn-danger cancelbtn SaveBillingInfo" style="display:none;" id="cancel-button3" type="reset" disabled>Cancel</button>

                </div>
            </form>

            <form asp-action="providerProfile" asp-controller="Admin" asp-route-id="@Model.PhysicianId" id="form4" method="post" enctype="multipart/form-data">

                <h3> Provider Profile</h3>
                <input type="hidden" asp-for="PhysicianId" />

                <div class="row formrow">
                    <div class="col-lg-6 col-md-6 col-sm-12">
                        <div class="form-floating form-group">
                            <input data-valmsg-replace="true" asp-for="BusinessName" type="text" class="form-control edit" id="businessname" placeholder=" " readonly>
                            <label for=" ">Business Name</label>
                            <span asp-validation-for="BusinessName" class="text-danger"></span>

                        </div>
                    </div>
                    <div class="col-lg-6 col-md-6 col-sm-12">
                        <div class="form-floating form-group">
                            <input data-valmsg-replace="true" asp-for="BusinessWebsite" type="text" class="form-control edit" id="businessweb" placeholder=" " readonly>
                            <label for=" ">Business Website </label>
                            <span asp-validation-for="BusinessWebsite" class="text-danger"></span>

                        </div>
                    </div>
                    <div class="col-lg-6 col-md-6 col-sm-12">
                        <div class="form-floating form-group">
                            <div class="form-floating form-group input-group mb-3">
                                <input asp-for="Photo" style="border-radius:10px"  type="file" class="form-control edit" id="UploadButton" >
                                <label style="color:black">Select File</label>
                            </div>
                        </div>
                    </div>
                    <div class="col-lg-4 col-md-3 col-sm-12">
                        <div class="form-floating form-group">
                            <div class="form-floating form-group input-group mb-3">
                                <input asp-for="Signature" style="border-radius:10px" type="file" class="form-control edit" id="UploadButton" >
                                <label style="color:black">Upload Signature</label>
                            </div>
                        </div>
                    </div>
                    <div class="col-lg-2 col-md-2 p-2">
                        <button type="button" class="btn btn-info h-75 text-white createbtn" data-bs-target="#modalofcanvas" data-bs-toggle="modal" value="@Model.PhysicianId">
                            <i class="fa fa-pencil" aria-hidden="true"></i> Create
                        </button>
                    </div>
                    @if (Model.IsSignature == true)
                    {
                        <div class="col-lg-12 col-md-12 col-sm-12 d-flex justify-content-center">

                            <img src="~/uploads/physician/image/@Model.filename" class="img-fluid " id="signatureprivew" style="width:105px;max-height:100px;" />

                        </div>
                    }
                    <div class="d-flex justify-content-center" id="created-sign" >

                        <div class="col-lg-12 col-md-12 col-sm-12 dropdownState">
                            <div class="form-floating form-group ">
                                <textarea asp-for="AdminNotes" class="form-control edit" id="textAreaExample2" style="height: 120px;" rows="8" placeholder=" " disabled></textarea>
                                <label class="form-label" for="textAreaExample2">
                                    Admin Notes

                                </label>
                                <span asp-validation-for="AdminNotes" class="text-danger"></span>
                            </div>
                        </div>



                    </div>
                    <div class="d-flex justify-content-end">
                        <button class="btn btn-info edit-button" id="edit-button" type="button">Edit</button>
                        <button class="btn btn-info savebtn SaveBillingInfo" style="display:none;" id="save-button4" type="submit" disabled>Save</button>
                        <button class="btn btn-danger cancelbtn SaveBillingInfo" style="display:none;" id="cancel-button4" type="reset" disabled>Cancel</button>

                    </div>
            </form>

            <hr />
            <h3> Onboarding</h3>
            <form asp-action="documentsProvider" asp-controller="Admin" method="post" id="form5" enctype="multipart/form-data">

                <input type="hidden" asp-for="PhysicianId" />
                <table>
                    <tr>
                        <td>
                            @if (Model.IsAgreementDoc == true)
                            {
                                <input type="checkbox" id="contractoragreement" class="mx-2" asp-for="IsAgreementDoc" checked />
                            }
                            else
                            {
                                <input type="checkbox" id="contractoragreement" class="mx-2" asp-for="IsAgreementDoc" />
                            }
                        </td>
                        <td> <span class="mx-2">Independent Contractor Agreement</span> </td>
                        <td>
                            <input asp-for="@Model.contractoragreement" class="filevalidate" type="file" id="file1" hidden />
                            <label type="button" class="btn btn-info text-white mx-2" for="file1">Upload</label>
                        </td>
                        <td>
                            <a type="button" class="btn btn-info text-decoration-none text-white d-none" id="viewbtn1">View</a>
                            @if (Model.IsAgreementDoc == true)
                            {
                                var newName = Model.PhysicianId + "_contractoragreement.pdf";
                                <a type="button" class="btn btn-info text-decoration-none text-white" id="viewbtn-1" href="/uploads/physician/doc/@newName" target="_blank">View</a>
                            }
                        </td>
                    </tr>
                    <tr>
                        <td>
                            @if (Model.isbackgroundcheck == true)
                            {
                                <input type="checkbox" id="backgroundcheck" class="mx-2" asp-for="isbackgroundcheck" checked />
                            }
                            else
                            {
                                <input type="checkbox" id="backgroundcheck" class="mx-2" asp-for="isbackgroundcheck" />

                            }
                        </td>
                        <td> <span class="mx-2">Background Check</span> </td>
                        <td>
                            <input asp-for="@Model.backgroundcheck" class="filevalidate" type="file" id="file2" hidden />
                            <label type="button" class="btn btn-info text-white mx-2" for="file2">Upload</label>
                        </td>
                        <td>
                            <a type="button" class="btn btn-info text-decoration-none text-white d-none" id="viewbtn2">View</a>
                            @if (Model.isbackgroundcheck == true)
                            {

                                var newName = Model.PhysicianId + "_backgroundcheck.pdf";
                                <a type="button" class="btn btn-info text-decoration-none text-white" id="viewbtn-2" href="/uploads/physician/doc/@newName" target="_blank">View</a>
                            }
                        </td>
                    </tr>
                    <tr>
                        <td>
                            @if (Model.Ishippa == true)
                            {
                                <input type="checkbox" id="hipaa" class="mx-2" asp-for="Ishippa" checked />
                            }
                            else
                            {
                                <input type="checkbox" id="hipaa" class="mx-2" asp-for="Ishippa" />

                            }
                        </td>
                        <td> <span class="mx-2">HIPPA Compliance</span> </td>
                        <td>
                            <input asp-for="@Model.hippa" type="file" class="filevalidate" id="file3" hidden />
                            <label type="button" class="btn btn-info text-white mx-2" for="file3">Upload</label>
                        </td>
                        <td>
                            <a type="button" class="btn btn-info text-decoration-none text-white d-none" id="viewbtn3">View</a>
                            @if (Model.Ishippa == true)
                            {

                                var newName = Model.PhysicianId + "_hippa.pdf";
                                <a type="button" class="btn btn-info text-decoration-none text-white" id="viewbtn-3" href="/uploads/physician/doc/@newName" target="_blank">View</a>
                            }
                        </td>
                    </tr>
                    <tr>
                        <td>
                            @if (Model.IsAgreementDocnondisclosure == true)
                            {
                                <input type="checkbox" id="non-disclosureagreement" class="mx-2" asp-for="IsAgreementDocnondisclosure" checked />
                            }
                            else
                            {
                                <input type="checkbox" id="non-disclosureagreement" class="mx-2" asp-for="IsAgreementDocnondisclosure" />

                            }
                        </td>
                        <td> <span class="mx-2">Non Disclosureagreement</span> </td>
                        <td>
                            <input asp-for="@Model.nondisclosure" type="file" class="filevalidate" id="file4" data-val="true" data-val-filetype="Please select a PDF file." data-val-filetype-allowed="application/pdf" hidden />
                            <label type="button" class="btn btn-info text-white mx-2" for="file4">Upload</label>
                        </td>
                        <td>
                            <a type="button" class="btn btn-info text-decoration-none text-white d-none" id="viewbtn4">View</a>
                            @if (Model.IsAgreementDocnondisclosure == true)
                            {

                                var newName = Model.PhysicianId + "_nonDisclosure.pdf";
                                <a type="button" class="btn btn-info text-decoration-none text-white" id="viewbtn-4" href="/uploads/physician/doc/@newName" target="_blank">View</a>
                            }
                        </td>
                    </tr>
                </table>

                <hr />
                <div class="d-flex justify-content-end">
                    <button class="btn btn-info save-button5" id="@Model.PhysicianId">Save</button>

                    <a href="@Url.Action("DeleteProvider","Admin",new{id = Model.PhysicianId})" class="btn btn-danger">Delete Account</a>
                </div>
            </form>
        </div>
    </div>
</div>
<div class="modal fade" id="modalofcanvas" tabindex="-1" aria-labelledby="myModalLabel" role="dialog" aria-hidden="true" style="background:transparent;">
    <div class="modal-dialog modal-dialog-centered" role="document">
        <div class="modal-content">
            <div class="modal-header text-white" style="background-color:rgb(60, 198, 233)">
                <h3 class="modal-title fs-5" id="exampleModalLabel">Create Signature</h3>

                <button type="button" class="btn-close btn-close-white" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <input type="hidden" asp-for="PhysicianId" name="physicianid" id="phyID" />
                <div class="p-4 m-auto border border-1  border-info rounded-2">
                    
                    <div class="row">
                        <div class="col-12">
                            <canvas id="sign-canvas" width="300" height="150">
                                Get Best here!
                            </canvas>
                        </div>
                    </div>
                </div>
                <div class="modal-footer" style="border-top:none;">
                    <input type="submit" class="btn btn-info text-white confirm" id="submit-sign" value="Submit sign" />

                    <button type="reset" class="btn text-info border-info" data-bs-dismiss="modal">Close</button>
                </div>
            </div>
        </div>
    </div>
</div>
<div id="loader-wrapper">
    <div id="loader"></div>
</div>
<script src="https://cdnjs.cloudflare.com/ajax/libs/jquery/3.6.0/jquery.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/html2canvas/1.3.2/html2canvas.min.js"></script>

<script>
    var phy = "";
    $('#createbtn').click(function () {
        phy = button.getAttribute('value');
        document.getElementById('phyID').value = phy;
    });

    $('#signatureModal').on('show.bs.modal', function (event) {
        var button = $(event.relatedTarget);
        var physicianid = button.data('physicianid');
        var input = $(this).find('input[name="physicianid"]');
        input.val(physicianid);
    });
    const fileInput = document.getElementById('UploadButton');
    fileInput.addEventListener('change', function (event) {
        const file = event.target.files[0];
        const validTypes = ['image/jpeg', 'image/jpg', 'image/png'];
        if (!validTypes.includes(file.type)) {
            Swal.fire({
                title: "Please upload Image only.",
                text: 'Required types can be : jpeg / jpg / png',
                icon: "warning",
                timer: 1500,
                allowOutsideClick: false,
                showConfirmButton: false,
            })
            this.value = "";
            return false;
        }
    });
    $('.save-button5').click(function () {
        event.preventDefault();
        const form = this.closest("form");

        const formData = new FormData(form);
        const formElement = form.closest("form");
        const url = formElement.action;

        var physicianId = $("#PhysicianId").val();

        $.ajax({
            type: 'POST',
            url: url,
            data: formData,
            processData: false,
            contentType: false,
            success: function (response) {
                if (response.success) {
                    toastr.success("Data Saved Successfully.");

                }
            }
        });

    });



    $('#form5').on('change', 'input[type = "file"]', function (event) {
        if (event.target.type === 'file') {
            var files = this.files;
            var id = this.id;
            if (files.length != 0) {
                if (id == "file1") {
                    $('#contractoragreement').prop('checked', true);
                    $('#viewbtn1').removeClass('d-none');
                    $('#viewbtn-1').addClass('d-none');
                    $('#viewbtn1').attr('href', URL.createObjectURL(this.files[0]));
                    $('#viewbtn1').attr('target', '_blank');
                }
                if (id == "file2") {
                    $('#backgroundcheck').prop('checked', true);
                    $('#viewbtn2').removeClass('d-none');
                    $('#viewbtn-2').addClass('d-none');
                    $('#viewbtn2').attr('href', URL.createObjectURL(this.files[0]));
                    $('#viewbtn2').attr('target', '_blank');
                }
                if (id == "file3") {
                    $('#hipaa').prop('checked', true);
                    $('#viewbtn3').removeClass('d-none');
                    $('#viewbtn-3').addClass('d-none');
                    $('#viewbtn3').attr('href', URL.createObjectURL(this.files[0]));
                    $('#viewbtn3').attr('target', '_blank');
                }
                if (id == "file4") {
                    $('#non-disclosureagreement').prop('checked', true);
                    $('#viewbtn4').removeClass('d-none');
                    $('#viewbtn-4').addClass('d-none');
                    $('#viewbtn4').attr('href', URL.createObjectURL(this.files[0]));
                    $('#viewbtn4').attr('target', '_blank');
                }
                if (id == "file5") {
                    $('#licensedocument').prop('checked', true);
                    $('#viewbtn5').removeClass('d-none');
                    $('#viewbtn-5').addClass('d-none');
                    $('#viewbtn5').attr('href', URL.createObjectURL(this.files[0]));
                    $('#viewbtn5').attr('target', '_blank');
                }
            }
            else {
                if (id == "file1") {
                    $('#contractoragreement').prop('checked', false);
                    $('#viewbtn1').addClass('d-none');
                    $('#viewbtn-1').removeClass('d-none');
                    $('#viewbtn1').removeAttr('href');

                }
                if (id == "file2") {
                    $('#backgroundcheck').prop('checked', false);
                    $('#viewbtn2').addClass('d-none');
                    $('#viewbtn-2').removeClass('d-none');
                    $('#viewbtn2').removeAttr('href');

                }
                if (id == "file3") {
                    $('#hipaa').prop('checked', false);
                    $('#viewbtn3').addClass('d-none');
                    $('#viewbtn-3').removeClass('d-none');
                    $('#viewbtn3').removeAttr('href');

                }
                if (id == "file4") {
                    $('#non-disclosureagreement').prop('checked', false);
                    $('#viewbtn4').addClass('d-none');
                    $('#viewbtn-4').removeClass('d-none');
                    $('#viewbtn4').removeAttr('href');

                }
                if (id == "file5") {
                    $('#licensedocument').prop('checked', false);
                    $('#viewbtn5').addClass('d-none');
                    $('#viewbtn-5').removeClass('d-none');
                    $('#viewbtn5').removeAttr('href');

                }
            }
        }
    });
    // save-edit button

    var editButton = document.getElementById("edit-button");
    editButton.addEventListener("click", function () {
        var form = editButton.closest("form");
        var inputs = form.querySelectorAll(".edit");
        var saveButton = form.querySelector(".savebtn");
        var cancleButton = form.querySelector(".cancelbtn");

        inputs.forEach(function (input) {
            input.removeAttribute("readonly");
            input.removeAttribute("disabled");
        });

        editButton.style.display = "none";
        saveButton.removeAttribute("disabled");
        saveButton.style.display = "block";
        cancleButton.removeAttribute("disabled");
        cancleButton.style.display = "block";


    });
    var editButton2 = document.getElementById("edit-button2");
    editButton2.addEventListener("click", function () {

        var form1 = editButton2.closest("form");
        var inputs = form1.querySelectorAll(".edit");
        var saveButton1 = form1.querySelector(".savebtn");
        var cancleButton = form1.querySelector(".cancelbtn");


        inputs.forEach(function (input) {
            input.removeAttribute("readonly");
            input.removeAttribute("disabled");


        });
        editButton2.style.display = "none";
        saveButton1.removeAttribute("disabled");
        saveButton1.style.display = "block";
        cancleButton.removeAttribute("disabled");
        cancleButton.style.display = "block";

    });
    var editButton3 = document.getElementById("edit-button3");
    editButton3.addEventListener("click", function () {

        var form2 = editButton3.closest("form");
        var inputs = form2.querySelectorAll(".edit");
        var saveButton2 = form2.querySelector(".savebtn");
        var cancleButton = form2.querySelector(".cancelbtn");


        inputs.forEach(function (input) {
            input.removeAttribute("readonly");
            input.removeAttribute("disabled");


        });
        editButton3.style.display = "none";
        saveButton2.removeAttribute("disabled");
        saveButton2.style.display = "block";
        cancleButton.removeAttribute("disabled");
        cancleButton.style.display = "block";

    });
    //form1
    var editButton4 = document.getElementById("edit-button4");
    editButton4.addEventListener("click", function () {

        var form4 = editButton4.closest("form");
        var inputs = form4.querySelectorAll(".edit");
        var saveButton4 = form4.querySelector(".savebtn");
        var cancleButton = form4.querySelector(".cancelbtn");


        inputs.forEach(function (input) {
            input.removeAttribute("readonly");
            input.removeAttribute("disabled");


        });
        inputs.forEach(function (textarea) {
            textarea.removeAttribute("readonly");
            textarea.removeAttribute("disabled");


        });
        editButton4.style.display = "none";
        saveButton4.removeAttribute("disabled");
        saveButton4.style.display = "block";
        cancleButton.removeAttribute("disabled");
        cancleButton.style.display = "block";

    });
    //form submit
    // Save data function

    function saveFormData(form) {

        const formData = new FormData(form);
        const formElement = form.closest("form");
        const url = formElement.action;

        var physicianId = $("#PhysicianId").val();

        $.ajax({
            type: 'POST',
            url: url,
            data: formData,
            processData: false,
            contentType: false,
            success: function (response) {
                if (response.success) {
                    // You can perform any other actions you want here, like hiding the save button and edit button
                    var inputs = formElement.querySelectorAll("input:not([readonly]),select:not([disabled])");
                    inputs.forEach(function (input) {
                        input.setAttribute("readonly", "readonly");
                        input.setAttribute("disabled", "disabled");
                    });

                    // Hide save and cancel buttons and show edit button
                    var editButtons11 = formElement.querySelector(".edit-button");
                    editButtons11.style.display = "block";
                    var saveButtons23 = formElement.querySelector(".savebtn");
                    saveButtons23.style.display = "none";


                    var canclebtn45 = formElement.querySelector(".cancelbtn");
                    canclebtn45.style.display = "none";
                    toastr.success("Data Saved Successfully.");

                }
            }
        });
    }

    // Event listeners for save buttons
    document.getElementById("save-button1").addEventListener("click", function (event) {
        var statusID = $("#statusID").val();
        var roleID = $("#roleID").val();

        if (statusID == 0) {
            document.getElementsByClassName('status')[0].innerText = "Plese Select Status";
            return;
        }
        if (roleID == 0) {
            document.getElementsByClassName('role')[0].innerText = "Plese Select Role";
            return;
        }
        event.preventDefault();
        const currentForm = this.closest("form");
        saveFormData(currentForm);
    });

    document.getElementById("save-button2").addEventListener("click", function (event) {
        var firstname = $("#firstName").val();
        var lastname = $("#lastname").val();
        var email = $("#Email").val();
        var phone = $("#phone").val();

        if (firstname.length <= 0) {
            document.getElementsByClassName('checkhere')[0].innerText = "Plese Enter FirstName";
            return;
        }


        if (lastname.length <= 0) {
            document.getElementsByClassName('lastname')[0].innerText = "Please Enter LastName";
            return;
        }

        if (email.length <= 0) {
            document.getElementsByClassName('email')[0].innerText = "Please Enter Email";
            return;
        }

        if (phone.length <= 0) {
            document.getElementsByClassName('phone')[0].innerText = "Please Enter Phone";
            return;
        }
        event.preventDefault();
        const currentForm = this.closest("form");
        saveFormData(currentForm);
    });

    document.getElementById("save-button3").addEventListener("click", function (event) {
        var address1 = $("#address1").val();
        var address2 = $("#address2").val();
        var city = $("#city").val();
        var state = $("#state").val();
        var zip = $("#zip").val();
        var altphone = $("#phone2").val();

        if (address1.length <= 0) {
            document.getElementsByClassName('address1')[0].innerText = "Please Enter Address 1";
            return;
        }

        if (city.length <= 0) {
            document.getElementsByClassName('city')[0].innerText = "Please Enter City";
            return;
        }

        if (state == 0) {
            document.getElementsByClassName('state')[0].innerText = "Please Enter State";
            return;
        }

        if (zip.length <= 0) {
            document.getElementsByClassName('zip')[0].innerText = "Please Enter Zip";
            return;
        }

        if (altphone.length <= 0) {
            document.getElementsByClassName('altphone')[0].innerText = "Please Enter Alternate Phone";
            return;
        }
        event.preventDefault();
        const currentForm = this.closest("form");
        saveFormData(currentForm);
    });

    document.getElementById("save-button4").addEventListener("click", function (event) {
        var businessname = $("#businessname").val();
        var businessweb = $("#businessweb").val();

        if (businessname.length <= 0 || businessname == "" || businessname == null) {
            document.getElementsByClassName('businessname')[0].innerText = "Please Enter Business Name";
            return;
        }

        if (businessweb.length <= 0 || businessweb == "" || businessweb == null) {
            document.getElementsByClassName('businessweb')[0].innerText = "Please Enter Business Website";
            return;
        }
        event.preventDefault();
        const currentForm = this.closest("form");
        saveFormData(currentForm);
    });

    document.getElementById("cancel-button1").addEventListener("click", function (event) {

        event.preventDefault();
        const currentForm = this.closest("form");
        cancelFormData(currentForm);
    });

    document.getElementById("cancel-button2").addEventListener("click", function (event) {

        event.preventDefault();
        const currentForm = this.closest("form");
        cancelFormData(currentForm);
    });

    document.getElementById("cancel-button3").addEventListener("click", function (event) {

        event.preventDefault();
        const currentForm = this.closest("form");
        cancelFormData(currentForm);
    });

    document.getElementById("cancel-button4").addEventListener("click", function (event) {

        event.preventDefault();
        const currentForm = this.closest("form");
        cancelFormData(currentForm);
    });

    function cancelFormData(form) {
        const formElement = form.closest("form");
        var inputs = formElement.querySelectorAll("input:not([readonly]),select:not([disabled])");
        var validationSpans = formElement.querySelectorAll("span.text-danger");
        validationSpans.forEach(function (validationSpan) {
            validationSpan.innerText = "";
        });
        inputs.forEach(function (input) {
            input.setAttribute("readonly", "readonly");
            input.setAttribute("disabled", "disabled");
        });
        inputs.forEach(function (textarea) {
            textarea.removeAttribute("readonly");
            textarea.removeAttribute("disabled");

        });
        // Hide save and cancel buttons and show edit button
        var editButtons11 = formElement.querySelector(".edit-button");
        editButtons11.style.display = "block";
        var saveButtons23 = formElement.querySelector(".savebtn");
        saveButtons23.style.display = "none";

        var canclebtn45 = formElement.querySelector(".cancelbtn");
        canclebtn45.style.display = "none";

        formElement.reset(); // reset form
    }


    //end
    //dark theme
    if (localStorage.getItem("Mytheme")) {
        body.classList.toggle(localStorage.getItem("Mytheme"));
    }

    //phone number flag
    const phoneInputField = document.querySelector("#phone");
    const phoneInput = window.intlTelInput(phoneInputField, {
        autoInsertDialCode: true,
        fixDropdownWidth: true,
        formatOnDisplay: false,

        defaultToFirstCountry: true,
        initialCountry: "in",
        nationalMode: false,
        useFullscreenPopup: false,
        utilsScript: "https://cdnjs.cloudflare.com/ajax/libs/intl-tel-input/17.0.8/js/utils.js",

    });
    const phoneInputField1 = document.querySelector("#phone2");
    const phoneInput1 = window.intlTelInput(phoneInputField1, {
        autoInsertDialCode: true,
        fixDropdownWidth: true,
        formatOnDisplay: false,

        defaultToFirstCountry: true,
        initialCountry: "in",
        nationalMode: false,
        useFullscreenPopup: false,
        utilsScript: "https://cdnjs.cloudflare.com/ajax/libs/intl-tel-input/17.0.8/js/utils.js",

    });


    $("#resetpasswordBtnProvider").on("click", function () {
        event.preventDefault();

        var password = $("#Password").val();
        var physicianId = $("#PhysicianId").val();

        if (password == "" || password.length < 6 || password == null) {
            document.getElementsByClassName('password-validation-message')[0].innerText = "Password must be between 8 and 16 characters long.";
            return;
        }

        $.ajax({
            url: "@Url.Action("ResetPasswordProvider", "Admin")",
            type: "POST",
            data: { physicianId: physicianId, newPassword: password },

            success: function (response) {


                if (response = "success") {
                    document.getElementsByClassName("passwordvalidate").innerText = "";
                    toastr.success("Password Saved Successfully.");

                } else {
                    toastr.success("Password not Saved .");

                }
            },
            error: function () {
                alert("An error occurred while resetting the password.");
            }
        });
    });


    const test = document.getElementsByClassName('filevalidate');
    Array.from(test).forEach(function (input) {
        input.addEventListener('change', function (event) {
            const file = event.target.files[0];
            const validTypes = ['application/pdf'];
            if (!validTypes.includes(file.type)) {
                Swal.fire({
                    title: "Please select an pdf file.",
                    icon: "warning",
                    timer: 2000,
                    allowOutsideClick: false,
                    showConfirmButton: true,
                })
                input.value = "";
                return false;
            }
        });
    });
    // Function to show loader
    function showLoader() {
        document.getElementById('loader-wrapper').style.display = 'block';
    }

    // Function to hide loader
    function hideLoader() {
        document.getElementById('loader-wrapper').style.display = 'none';
    }

    $(document).ready(function () {
        var canvas = document.getElementById('sign-canvas');
        var ctx = canvas.getContext('2d');

        var isDrawing = false;
        var lastX = 0;
        var lastY = 0;

        canvas.addEventListener('mousedown', function (e) {
            isDrawing = true;
            [lastX, lastY] = [e.offsetX, e.offsetY];
        });

        canvas.addEventListener('mousemove', function (e) {
            if (isDrawing) {
                ctx.beginPath();
                ctx.moveTo(lastX, lastY);
                ctx.lineTo(e.offsetX, e.offsetY);
                ctx.strokeStyle = 'black';
                ctx.lineWidth = 2;
                ctx.lineCap = 'round';
                ctx.stroke();
                [lastX, lastY] = [e.offsetX, e.offsetY];
            }
        });

        canvas.addEventListener('mouseup', function () {
            isDrawing = false;
        });

        $('#submit-sign').click(function () {
            showLoader();

            // Convert canvas to image
            html2canvas(canvas).then(function (canvasImg) {
                // Display image somewhere
                $('#created-sign').html(canvasImg);
                // Close modal

                var dataURL = canvas.toDataURL();
                var blob = dataURLToBlob(dataURL);
                var formData = new FormData();

                formData.append('signature', blob, 'signature.png');
               

                formData.append('physicianId', @Model.PhysicianId);
                $.ajax({
                    type: 'POST',
                    url: '/Admin/addSignature',
                    data: formData,
                    processData: false,
                    contentType: false,
                    success: function (response) {
                        setInterval(function () {
                        hideLoader();
                            location.reload();
                        }, 5000);

                    },
                    error: function (xhr, textStatus, errorThrown) {
                        // handle the error
                        console.log(xhr, textStatus, errorThrown);
                    }
                });
            });
        });

        function dataURLToBlob(dataURL) {
            var BASE64_MARKER = ';base64,';
            if (dataURL.indexOf(BASE64_MARKER) == -1) {
                var parts = dataURL.split(',');
                var contentType = parts[0].split(':')[1];
                var raw = decodeURIComponent(parts[1]);
                return new Blob([raw], { type: contentType });
            }
            var parts = dataURL.split(BASE64_MARKER);
            var contentType = parts[0].split(':')[1];
            var raw = window.atob(parts[1]);
            var rawLength = raw.length;
            var uInt8Array = new Uint8Array(rawLength);
            for (var i = 0; i < rawLength; ++i) {
                uInt8Array[i] = raw.charCodeAt(i);
            }
            return new Blob([uInt8Array], { type: contentType });
        }
    });
</script>


