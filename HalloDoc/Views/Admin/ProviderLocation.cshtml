
@{
    ViewBag.providerLOC = "active";
    ViewData["Title"] = "Provider Location";

}
<link rel="stylesheet" href="~/css/bootstrap.min.css">
<link rel="stylesheet" href="~/css/admin/Scheduling.css" />

<link rel="stylesheet" href="https://unpkg.com/leaflet/dist/leaflet.css" />
<script src="https://unpkg.com/leaflet/dist/leaflet.js"></script>

<style>
    .leaflet-bottom {
        display: none;
    }
   
    
</style>

<div class="mainSectionMargin  vh-100">


    <div class="container d-flex flex-column mt-3 gap-2 p-3 ">

        @*Header of view page*@
        <div class="container d-flex justify-content-between p-0 my-2">
            <div>
                <p class="h4">Provider Location </p>
            </div>
            <a asp-controller="Admin" asp-action="AdminDashboard" class="btn btn-outline-info">
                &lt; Back
            </a>
        </div>
        <div id="map" style=" height: 500px;z-index:0"></div>
    </div>
</div>





@*<script>

    var physician = [
    @foreach (var item in Model)
    {
        <text>
            {
                "Name": "@item.FirstName",
                "Address": "@item.Address1"
            },

        </text>
    }
                      ]
    function initMap() {
        var map = new google.maps.Map(document.getElementById('map'), {
            zoom: 8,
            center: { lat: 0, lng: 0 } // Default center
        });

        physician.forEach(function (physician) {
            var geocoder = new google.maps.Geocoder();

            geocoder.geocode({ 'address': physician.Address1 }, function (result, status) {
                if (status === "OK") {
                    var marker = new google.maps.Marker({
                        map: map,
                        position: result[0].geometry.location,
                        title: physician.FirstName,
                    });
                }
                else {
                    console.error("GeoCoder was not successfull for following reson:", status);
                }
            });
        });


    }



</script>*@

@*<script async defer src="https://maps.googleapis.com/maps/api/js?key=AIzaSyALnsMNrlY5pmr_MJD79qa5Rec1_sUG3NQ&callback=initMap"></script>*@

<script>
   
    var map = L.map('map').setView([20.5937, 78.9629], 5); // Set initial center and zoom level

    L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {
        attribution: '&copy; <a href="https://www.openstreetmap.org/copyright">OpenStreetMap</a> contributors'
    }).addTo(map);

</script>


<script>
    var physicians = [
    @foreach (var physician in ViewBag.Locations)
    {
        <text>{
                "Id": "@physician.PhysicianId",
                "Name": "@physician.PhysicianName " ,
                "Address": "@physician.Address"
            }, </text>
    }
                    ];

    /*  var iconColors = ['#FF5733', '#3399FF', '#33FF57', '#FF33F2', '#FFC300'];*/ // Array of different marker colors

    var iconCounter = 0; // Counter to track the current marker color

    physicians.forEach(function (physician) {
        var id = physician.Id;
        var address = physician.Address;
        var name = physician.Name;

        fetch('https://nominatim.openstreetmap.org/search?format=json&q=' + address)
            .then(response => response.json())
            .then(data => {
                if (data.length > 0) {
                    var lat = parseFloat(data[0].lat);
                    var lon = parseFloat(data[0].lon);

                    // Define marker icon with unique color
                    //var icon = L.divIcon({
                    //    className: 'custom-marker',
                    //    html: '<div style="background-color: ' + iconColors[iconCounter] + ';" class="marker-pin"></div>',
                    //    iconSize: [30, 42],
                    //    iconAnchor: [15, 42]
                    //});

                    var marker = L.marker([lat + (0.0003 * iconCounter), lon]).addTo(map);
                    marker.bindPopup(name); // Bind physician's name to the marker
                    marker.openPopup();
                    // Increment counter for next marker color
                    iconCounter = (iconCounter + 1);
                }
            });
    });
 
</script>


